--------------------------------------------------------
--	"TG68 Basic Test"
--
--	Implement and test the TG68 core in the most simple
--	way possible.  This project is a recreation of one
--	found over at RetroRamblings.net called
-- 	"Experimenting with TG68".
--------------------------------------------------------


library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;


entity TG68_BasicTest is

	port(
			-- 50MHz Clock Input
			CLOCK_50_B5B	: in	std_logic;
			
			-- Quad 7_segment Displays
			HEX0			: out	std_logic_vector(6 downto 0);	-- HEX Digit 0
			HEX1			: out	std_logic_vector(6 downto 0);	-- HEX Digit 1
			HEX2			: out	std_logic_vector(6 downto 0);	-- HEX Digit 2
			HEX3			: out	std_logic_vector(6 downto 0);	-- HEX Digit 3
			
			-- Reset Button
			KEY				: in	std_logic_vector(3 downto 0)
		);

end entity;


architecture rtl of TG68_BasicTest is

	-- Build a 2-D array type for the RAM
	subtype word_t is std_logic_vector((DATA_WIDTH-1) downto 0);
	type memory_t is array(2**ADDR_WIDTH-1 downto 0) of word_t;

	-- Declare the RAM signal.	
	signal ram : memory_t;

	-- Register to hold the address 
	signal addr_reg : natural range 0 to 2**ADDR_WIDTH-1;

begin

	process(clk)
	begin
	if(rising_edge(clk)) then
		if(we = '1') then
			ram(addr) <= data;
		end if;

		-- Register the address for reading
		addr_reg <= addr;
	end if;
	end process;

	q <= ram(addr_reg);

end rtl;
